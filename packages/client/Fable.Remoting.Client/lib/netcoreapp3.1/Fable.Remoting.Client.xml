<?xml version="1.0" encoding="utf-8"?>
<doc>
<assembly><name>Fable.Remoting.Client</name></assembly>
<members>
<member name="M:Fable.Remoting.Client.ByteArrayExtensions.SaveFileAs(System.Byte[],System.String,System.String)">
<summary>
 Saves the binary content as a file using the provided file name.
</summary>
</member>
<member name="M:Fable.Remoting.Client.ByteArrayExtensions.SaveFileAs(System.Byte[],System.String)">
<summary>
 Saves the binary content as a file using the provided file name.
</summary>
</member>
<member name="M:Fable.Remoting.Client.ByteArrayExtensions.AsDataUrl(System.Byte[],System.String)">
<summary>
 Converts the binary content into a data url by first converting it to a Blob of the provided mime-type and reading it as a data url.
</summary>
</member>
<member name="M:Fable.Remoting.Client.ByteArrayExtensions.AsDataUrl(System.Byte[])">
<summary>
 Converts the binary content into a data url by first converting it to a Blob of type &quot;application/octet-stream&quot; and reading it as a data url.
</summary>
</member>
<member name="M:Fable.Remoting.Client.BrowserFileExtensions.File.ReadAsText(Browser.Types.File)">
<summary>
 Asynchronously reads the File contents as text
</summary>
</member>
<member name="M:Fable.Remoting.Client.BrowserFileExtensions.File.ReadAsDataUrl(Browser.Types.File)">
<summary>
 Asynchronously reads the File content as a data url string
</summary>
</member>
<member name="M:Fable.Remoting.Client.BrowserFileExtensions.File.ReadAsByteArray(Browser.Types.File)">
<summary>
 Asynchronously reads the File content as byte[]
</summary>
</member>
<member name="M:Fable.Remoting.Client.InternalUtilities.toUInt8Array(System.Byte[])">
<summary>
 Creates a typed byte array of binary data if it not already typed
</summary>
</member>
<member name="M:Fable.Remoting.Client.InternalUtilities.isUInt8Array(System.Byte[])">
<summary>
 Returns whether the input byte array is a typed array of type Uint8Array
</summary>
</member>
<member name="M:Fable.Remoting.Client.InternalUtilities.revokeObjectUrl(System.String)">
<summary>
 Releases an existing object URL which was previously created by calling createObjectURL(). Call this method when you&apos;ve finished using an object URL to let the browser know not to keep the reference to the file any longer.
</summary>
</member>
<member name="M:Fable.Remoting.Client.InternalUtilities.createObjectUrl(Browser.Types.Blob)">
<summary>
 Creates an object URL (also known as data url) from a Blob
</summary>
</member>
<member name="M:Fable.Remoting.Client.InternalUtilities.createBlobFromBytesAndMimeType(System.Byte[],System.String)">
<summary>
 Creates a Blob from the given input string
</summary>
</member>
<member name="M:Fable.Remoting.Client.InternalUtilities.createFileReader">
<summary>
 Creates a new instance of a FileReader
</summary>
</member>
<member name="T:Fable.Remoting.Client.InternalUtilities">
<summary>
 Utilities for working with binary data types in the browser
</summary>
</member>
<member name="M:Fable.Remoting.Client.Http.send(Fable.Remoting.Client.HttpRequest)">
<summary>
 Sends the request to the server and asynchronously returns a response
</summary>
</member>
<member name="M:Fable.Remoting.Client.Http.withBody(Fable.Remoting.Client.RequestBody,Fable.Remoting.Client.HttpRequest)">
<summary>
 Appends a request with string body content
</summary>
</member>
<member name="M:Fable.Remoting.Client.Http.withCredentials(System.Boolean,Fable.Remoting.Client.HttpRequest)">
<summary>
 Sets the withCredentials option on the XHR request, useful for CORS requests
</summary>
</member>
<member name="M:Fable.Remoting.Client.Http.withHeaders(Microsoft.FSharp.Collections.FSharpList{System.Tuple{System.String,System.String}},Fable.Remoting.Client.HttpRequest)">
<summary>
 Appends a request with headers as key-value pairs
</summary>
</member>
<member name="M:Fable.Remoting.Client.Http.request(Fable.Remoting.Client.HttpMethod,System.String)">
<summary>
 Creates a request using the given method and url
</summary>
</member>
<member name="M:Fable.Remoting.Client.Http.post(System.String)">
<summary>
 Creates a POST request to the specified url
</summary>
</member>
<member name="M:Fable.Remoting.Client.Http.get(System.String)">
<summary>
 Creates a GET request to the specified url
</summary>
</member>
<member name="P:Fable.Remoting.Client.Http.defaultRequestConfig">
<summary>
 Constructs default values for HttpRequest
</summary>
</member>
<member name="M:Fable.Remoting.Client.Proxy.extractAsyncArg(System.Type)">
<summary>
 Extracts the &apos;T from Async&lt;&apos;T&gt;
</summary>
</member>
<member name="M:Fable.Remoting.Client.Blob.readBlobAsText(Browser.Types.Blob)">
<summary>
 Asynchronously reads the blob data content as string
</summary>
</member>
<member name="M:Fable.Remoting.Client.Blob.fromBinaryEncodedText(System.Byte[])">
<summary>
 Creates a Blob from the given input string
</summary>
</member>
<member name="M:Fable.Remoting.Client.RemotingModule.withBinarySerialization(Fable.Remoting.Client.RemoteBuilderOptions)">
<summary>
 Specifies that the API uses binary serialization for responses
</summary>
</member>
<member name="M:Fable.Remoting.Client.RemotingModule.withCredentials(System.Boolean,Fable.Remoting.Client.RemoteBuilderOptions)">
<summary>
 Sets the withCredentials option on the XHR request, which is useful for CORS scenarios
</summary>
</member>
<member name="M:Fable.Remoting.Client.RemotingModule.withAuthorizationHeader(System.String,Fable.Remoting.Client.RemoteBuilderOptions)">
<summary>
 Sets the authorization header of every request from the proxy
</summary>
</member>
<member name="M:Fable.Remoting.Client.RemotingModule.withCustomHeader(Microsoft.FSharp.Collections.FSharpList{System.Tuple{System.String,System.String}},Fable.Remoting.Client.RemoteBuilderOptions)">
<summary>
 Adds custom headers to each request of the proxy
</summary>
</member>
<member name="M:Fable.Remoting.Client.RemotingModule.withBaseUrl(System.String,Fable.Remoting.Client.RemoteBuilderOptions)">
<summary>
 Sets the base url for the request. Useful if you are making cross-domain requests
</summary>
</member>
<member name="M:Fable.Remoting.Client.RemotingModule.withRouteBuilder(Microsoft.FSharp.Core.FSharpFunc{System.String,Microsoft.FSharp.Core.FSharpFunc{System.String,System.String}},Fable.Remoting.Client.RemoteBuilderOptions)">
<summary>
 Defines how routes are built using the type name and method name. By default, the generated routes are of the form `/typeName/methodName`.
</summary>
</member>
<member name="M:Fable.Remoting.Client.RemotingModule.createApi">
<summary>
 Starts with default configuration for building a proxy
</summary>
</member>
</members>
</doc>
